// <auto-generated />
using Frags.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Frags.Database.Migrations
{
    [DbContext(typeof(RpgContext))]
    partial class RpgContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034");

            modelBuilder.Entity("Frags.Database.Characters.ActiveCharacter", b =>
                {
                    b.Property<ulong>("UserIdentifier")
                        .ValueGeneratedOnAdd();

                    b.HasKey("UserIdentifier");

                    b.ToTable("ActiveCharacters");
                });

            modelBuilder.Entity("Frags.Database.Characters.CharacterDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("Experience");

                    b.Property<string>("Name");

                    b.Property<string>("Story");

                    b.Property<ulong>("UserIdentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserIdentifier")
                        .IsUnique();

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Frags.Database.Characters.CharacterDto", b =>
                {
                    b.HasOne("Frags.Database.Characters.ActiveCharacter")
                        .WithOne("Character")
                        .HasForeignKey("Frags.Database.Characters.CharacterDto", "UserIdentifier")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
